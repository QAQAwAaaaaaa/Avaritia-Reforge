plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}


group = project.maven_group
version = project.mod_version

base {
    archivesName = project.archives_name + "-" + project.minecraft_version
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    //mappings channel: 'parchment', version: '2022.05.02-1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                avaritia {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                avaritia {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            args '--mod', 'avaritia', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing', file('src/generated/resources/')
            environment 'target', 'fmluserdevdata'
            mods {
                avaritia {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "avaritia.refmap.json"

    config "avaritia.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven { url = "https://maven.covers1624.net/" }
    maven { url = 'https://dvs1.progwml6.com/files/maven/' }
    maven { url = 'https://maven.blamejared.com' }
    maven {
        url = 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
    maven { url = 'https://maven.theillusivec4.top/' }
    maven { url = 'https://maven.melanx.de/' }
    maven { url = 'https://dvs1.progwml6.com/files/maven/' }
    maven {
        url = "https://maven.architectury.dev"
        content {
            includeGroup "me.shedaniel"
        }
    }
    maven {
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven {
        name = 'Twilight Forest'
        url = 'https://modmaven.dev/'
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
//compileOnly fg.deobf("codechicken:CodeChickenLib:1.18.2-4.1.0.449:universal")
    //runtimeOnly fg.deobf("codechicken:CodeChickenLib:1.18.2-4.1.0.449:universal")
    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${crafttweaker_version}")
    compileOnly fg.deobf('curse.maven:jade-324717:4573193')
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}"))
    //compileOnly fg.deobf(fileTree(dir: 'libs', include: ['*.jar']))
    //compileOnly("teamtwilight:twilightforest:4.0.546:universal")
    //implementation fg.deobf('vazkii.botania:Botania:1.18.2-431')
//    implementation fg.deobf('vazkii.patchouli:Patchouli:1.18.2-67')
//    implementation fg.deobf('top.theillusivec4.curios:curios-forge:1.18.2-5.0.6.3')
    //implementation fg.deobf("curse.maven:projecte-226410:${projecte_id}")
    //runtimeOnly fg.deobf('mezz.jei:jei-1.18.2:9.7.0.193')
}

jar {
    finalizedBy 'reobfJar'
    setArchiveClassifier("universal")
    from file("LICENSE")
    manifest {
        attributes 'Specification-Title': archivesBaseName
        attributes 'Specification-Vendor': 'cnlimiter'
        attributes 'Specification-Version': "1"
        attributes 'Implementation-Title': archivesBaseName
        attributes 'Implementation-Vendor': 'cnlimiter'
        attributes 'Implementation-Version': project.jar.archiveVersion
        attributes 'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    }
}

tasks.register('srcJar', Jar) {
    build.dependsOn it
    from sourceSets.main.allSource
    setArchiveClassifier("sources")
    from file("LICENSE")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = "${project.maven_group}"
            artifactId = "${project.archives_name}"
            version = "${project.minecraft_version}" + "-" + "${project.mod_version}"
        }
    }
    repositories {
        if (System.getenv('MAVEN_USERNAME') != null && System.getenv('MAVEN_PASSWORD') != null) {
            maven {
                name 'release'
                url = 'https://maven.nova-committee.cn/releases'

                credentials {
                    username System.getenv('MAVEN_USERNAME')
                    password System.getenv('MAVEN_PASSWORD')
                }
            }
        }
    }
}